version: '3.8'
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      retries: 5

  mlflow:
    image: mlflow:latest
    ports:
      - "5000:5000"
    command: >
      mlflow server
        --backend-store-uri sqlite:///mlflow.db
        --default-artifact-root /mlruns
    volumes:
      - mlruns:/mlruns
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 10s
      retries: 5

  training:
    build: ../services/training
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      mlflow:
        condition: service_healthy
    ports:
      - "8002:8000"
    command: >
      bash -lc "\
        python app/manage.py migrate --noinput && \
        python services/training/app/training_app/scripts/ingest.py && \
        python services/training/app/training_app/scripts/train.py && \
        python app/manage.py runserver 0.0.0.0:8000\
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/api/training/runs/"]
      interval: 10s
      retries: 5

  inference:
    build: ../services/inference
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8001:8000"
    command: >
      bash -lc "\
        python app/manage.py migrate --noinput && \
        python app/manage.py runserver 0.0.0.0:8000\
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/inference/api/artifacts/"]
      interval: 10s
      retries: 5

  billing:
    build: ../services/billing
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8003:8000"
    command: >
      bash -lc "\
        python app/manage.py migrate --noinput && \
        python app/manage.py runserver 0.0.0.0:8000\
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/billing/api/usage/"]
      interval: 10s
      retries: 5

  users:
    build: ../services/users
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8004:8000"
    command: >
      bash -lc "\
        python app/manage.py migrate --noinput && \
        python app/manage.py runserver 0.0.0.0:8000\
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/api/auth/"]
      interval: 10s
      retries: 5

volumes:
  db_data:
  mlruns:
